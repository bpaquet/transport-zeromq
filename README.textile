h1. ØMQ transport layer plugin for Elasticsearch

This plugin is a fork from https://github.com/tlrx/transport-zeromq. It expose the index REST interface through a ZeroMQ pull socket, without sending response. It's designed for mass indexing into ElasticSearch, for example with "node-logstash":https://github.com/bpaquet/node-logstash.

h2. Versions

|_. ØMQ Transport Plugin|_. ElasticSearch	|_. ØMQ	|
|  master (0.0.4.1-SNAPSHOT)   	|  master (0.19.10)	| 2.2	|


h2. Installation

h3. Requirements

Before installing and using this plugin with Elasticsearch (0.19.10), you need to install ZeroMQ Java Binding library (2.2) on your system. This binding uses native library to work. 

The "ZeroMQ":http://www.zeromq.org/ website is a great place to start installing the libraries, specially the "Java binding page":http://www.zeromq.org/bindings:java

If you want to develop or modify this plugin, I encourage you to read the "ØMQ - The Guide":http://zguide.zeromq.org/page:all which is very well documented. 

h3. Installation

Type the command in your favorite shell :

<pre>
$ bin\plugin -install bpaquet/transport-zeromq/0.0.4.1-SNAPSHOT
</pre>

Elasticsearch automatically install the plugin:

<pre>
-> Installing bpaquet/transport-zeromq/0.0.4.1-SNAPSHOT...
Trying https://github.com/downloads/bpaquet/transport-zeromq/0.0.4.1-SNAPSHOT.zip...
Downloading ..........DONE
Installed transport-zeromq
</pre>

Then, you must replace the file *plugins/transport-zeromq/jzmq-1.0.0.jar* with the Java binding compiled for your system.

Finally, edit Elasticsearch configuration file @config/elasticsearch.yml@ and add the properties:

<pre>
# ZeroMQ Transport config
zeromq.bind: tcp://0.0.0.0:9700
</pre>

Restart Elasticsearch.

If you have the following error
<pre>Initialization Failed ...
1) UnsatisfiedLinkError[no jzmq in java.library.path]2) NoClassDefFoundError[Could not initialize class org.zeromq.ZMQ]</pre>

You can try to update your LD_LIBRARY_PATH:
<pre>export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib</pre>

You can also read the documentation of the "ØMQ Java binding":http://www.zeromq.org/bindings:java. 


h2. Behind the scene

The plugin exposes the REST interfaces of Elasticsearch over ØMQ sockets. The implementation uses a push pull pattern, ElasticSearch is the pull socket.

For example, a ØMQ client can send the following message:
<pre>POST|/twitter/tweet/2|{"user" : "kimchy", "post_date" : "2009-11-15T14:12:12", "message" : "You know, for Search"}</pre>

It will receive no response.

The transport layer converts ØMQ messages in a given format into REST request objects that can be handled by ES. 

The expected format for incoming messages is: 
<pre><code> <Method PUT,DELETE, POST...>|<URI, including parameters>|<JSON content> </code></pre>

But any other message format can be easely implemented if needed.

